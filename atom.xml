<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>过河的小卒子</title>
  
  <subtitle>Stay Hungry Stay Foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-29T13:18:14.706Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>过河的小卒子</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>cpp类的默认函数</title>
    <link href="http://yoursite.com/2019/12/29/cpp%E7%B1%BB%E7%9A%84%E9%BB%98%E8%AE%A4%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/2019/12/29/cpp%E7%B1%BB%E7%9A%84%E9%BB%98%E8%AE%A4%E5%87%BD%E6%95%B0/</id>
    <published>2019-12-29T01:59:15.000Z</published>
    <updated>2019-12-29T13:18:14.706Z</updated>
    
    <content type="html"><![CDATA[<p>我们定义一个空类，但是这个类的大小其实不是0，而是1，这是因为每一个类的实例在内存中都是唯一的，编译器一般都会为每个空类实例分配一个字节<br>来表示这个类的地址。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ class Book &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><br>那么当我们实例化一个空类的时候，是不是真的什么都没有呢，当然不是，编译器会帮我们生成6个默认函数(常见只有4个，重点介绍)<br>1、默认构造函数<br>当我们实例化一个空类的时候，编译器会帮我们生成一个默认构造函数，构造函数的作用其实就是对类对象分配空间，对类成员变量进行初始化<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ class Book &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"> int main()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">     Book book; // 其实会生成一个默认构造函数book();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"> &#125;</span></pre></td></tr></table></figure><br>C++一个类通常有6个默认成员函数，分别是：构造函数，析构函数，拷贝构造函数，赋值运算符重载函数，<br>取址操作符重载函数，const修饰的取址操作符重载。<br>一般来说前4个比较重要，我们重点介绍一下：<br>1、构造函数：<br>构造函数顾名思义就是为类对象分配空间，对类的成员变量进行初始化，类的缺省构造函数可以重载，<br>只要声明和定义了一种构造函数(不管有参还是无参)，编译器就不会再帮我们生成缺省构造函数了。<br>1、函数名与类名相同<br>2、无返回值<br>3、对象构造的时候调用<br>4、构造函数可以重载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ class Book &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  public:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">      Book();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">      Book(char* name = <span class="string">"儿童图书"</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  private:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">       char* name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>2、析构函数</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我们定义一个空类，但是这个类的大小其实不是0，而是1，这是因为每一个类的实例在内存中都是唯一的，编译器一般都会为每个空类实例分配一个字节&lt;br&gt;来表示这个类的地址。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
    
      <category term="C++基础" scheme="http://yoursite.com/categories/C-%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="C++基础知识归档" scheme="http://yoursite.com/tags/C-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>C++11 delete/default的使用</title>
    <link href="http://yoursite.com/2019/12/29/delete-default/"/>
    <id>http://yoursite.com/2019/12/29/delete-default/</id>
    <published>2019-12-29T01:48:30.000Z</published>
    <updated>2019-12-29T13:17:59.002Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="C++基础" scheme="http://yoursite.com/categories/C-%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="C++基础知识归档" scheme="http://yoursite.com/tags/C-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>leetcode</title>
    <link href="http://yoursite.com/2019/12/25/leetcode/"/>
    <id>http://yoursite.com/2019/12/25/leetcode/</id>
    <published>2019-12-25T15:54:53.000Z</published>
    <updated>2019-12-25T16:06:54.375Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode刷题" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>hello-github</title>
    <link href="http://yoursite.com/2019/12/08/hello-github/"/>
    <id>http://yoursite.com/2019/12/08/hello-github/</id>
    <published>2019-12-08T14:46:32.000Z</published>
    <updated>2019-12-08T14:49:59.640Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="分类1" scheme="http://yoursite.com/categories/%E5%88%86%E7%B1%BB1/"/>
    
      <category term="分类2" scheme="http://yoursite.com/categories/%E5%88%86%E7%B1%BB1/%E5%88%86%E7%B1%BB2/"/>
    
    
      <category term="标签1" scheme="http://yoursite.com/tags/%E6%A0%87%E7%AD%BE1/"/>
    
      <category term="标签2" scheme="http://yoursite.com/tags/%E6%A0%87%E7%AD%BE2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/12/08/hello-world/"/>
    <id>http://yoursite.com/2019/12/08/hello-world/</id>
    <published>2019-12-08T05:29:41.328Z</published>
    <updated>2019-12-08T05:29:41.328Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo server</span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo generate</span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
